# SPDX-FileCopyrightText: 2025 Frank Hunleth
#
# SPDX-License-Identifier: Apache-2.0
# Post-installation firmware operations (UNIT TEST VERSION)
#
# Run: fwup -c -f ops.conf -o ops.fw
#
# Tasks include:
#
# * `factory-reset` - Clear out the writable filesystem and any other writable
#                   areas so that they can be re-initialized on the next boot.
# * `prevent-revert` - Prevent `revert` from working until the next firmware
# * `revert` - Revert to the previous firmware if it's still available
# * `validate` - Mark this firmware as a good update.
# * `status` - Print out which partition is active (`a` or `b`)
#
# To use:
#
# 1. Run `fwup -c -f fwup-ops.conf -o ops.fw` and copy ops.fw to
#    the device. This is done automatically as part of the Nerves system
#    build process. The file is stored in `/usr/share/fwup/ops.fw`.
# 2. On the device, run `fwup -t <task> -d /dev/rootdisk0 --enable-trim /usr/share/fwup/ops.fw`.
# 3. Reboot after running `revert` or `factory-reset`.

require-fwup-version="1.0.0"

task reset-image {
    on-init { raw_memset(0, 1, 0x0a) }
}

##
# factory-reset
##
file-resource factory-reset.txt { contents = "factory-reset\n" }
task factory-reset {
    on-init { info("factory-reset") }
    on-resource factory-reset.txt { raw_write(0) }
}

##
# prevent-revert
#
# Pass `--enable-trim` to also clear out the partition that no longer should be used.
##
file-resource prevent-revert.txt { contents = "prevent-revert\n" }
task prevent-revert {
    on-init { info("prevent-revert") }
    on-resource prevent-revert.txt { raw_write(0) }
}

##
# revert
##
file-resource revert.txt { contents = "revert\n" }
task revert {
    on-init { info("revert") }
    on-resource revert.txt { raw_write(0) }
}

##
# status
#
# Run "fwup /usr/share/fwup/ops.fw -t status -d /dev/rootdisk0 -q -U" to check the status.
##
task status {
    # Allow the unit tests to override the status by setting $STATUS
    on-init { info("\${STATUS:-a->b}") }
}

##
# validate
#
# The fwup configuration for this device always validates, so this doesn't do anything.
##
file-resource validate.txt { contents = "validate\n" }
task validate {
    on-init { info("validate") }
    on-resource validate.txt { raw_write(0) }
}
